<?xml version="1.0" encoding="UTF-8"?>
<issues format="6" by="lint 8.5.0-dev" type="baseline" client="" dependencies="true" name="" variant="all" version="8.5.0-dev">

    <issue
        id="CheckResult"
        message="The result of `directExecutor` is not used"
        errorLine1="            MoreExecutors.directExecutor();"
        errorLine2="            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ClasspathVerifier.java"
            line="26"
            column="13"/>
    </issue>

    <issue
        id="CheckResult"
        message="The result of `intern` is not used"
        errorLine1="                        it.intern(symbol)"
        errorLine2="                        ~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/services/SymbolTableBuildService.kt"
            line="96"
            column="25"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Avoid using eager method get"
        errorLine1="            val processJavaResourcesTask = taskContainer.processJavaResourcesTask.get()"
        errorLine2="                                                                                  ~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/variant/BaseVariantData.kt"
            line="208"
            column="83"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use configureEach instead of whenObjectAdded"
        errorLine1="        signingConfigContainer.whenObjectAdded(this::addSigningConfig)"
        errorLine2="                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/variant/LegacyVariantInputManager.kt"
            line="111"
            column="32"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use configureEach instead of whenObjectAdded"
        errorLine1="        buildTypeContainer.whenObjectAdded(this::addBuildType)"
        errorLine2="                           ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/variant/LegacyVariantInputManager.kt"
            line="116"
            column="28"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use configureEach instead of whenObjectAdded"
        errorLine1="        productFlavorContainer.whenObjectAdded(this::addProductFlavor);"
        errorLine2="                               ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/variant/LegacyVariantInputManager.kt"
            line="121"
            column="32"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use configureEach instead of whenObjectAdded"
        errorLine1="            whenObjectAdded { device: Device ->"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/ManagedDevices.kt"
            line="35"
            column="13"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use configureEach instead of whenObjectAdded"
        errorLine1="            whenObjectAdded { device: com.android.build.api.dsl.ManagedVirtualDevice ->"
        errorLine2="            ~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/dsl/ManagedDevices.kt"
            line="53"
            column="13"/>
    </issue>

    <issue
        id="EagerGradleConfiguration"
        message="Use register instead of create"
        errorLine1="        final AndroidReportTask mergeReportsTask = project.getTasks().create(&quot;mergeAndroidReports&quot;,"
        errorLine2="                                                                      ~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/plugins/ReportingPlugin.java"
            line="102"
            column="71"/>
    </issue>

    <issue
        id="NoNioFilesCopy"
        message="Do not use `java.nio.file.Files.copy(Path, Path)`. Instead, use `FileUtils.copyFile(Path, Path)` or Kotlin&apos;s `File#copyTo(File)`"
        errorLine1="            Files.copy(inputFile, renamedInputFile)"
        errorLine2="                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/AsarToApksTransform.kt"
            line="75"
            column="19"/>
    </issue>

    <issue
        id="ProjectExecOperations"
        message="Avoid using `org.gradle.api.Project.exec` as it is incompatible with Gradle instant execution."
        errorLine1="            project.exec(action)"
        errorLine2="                    ~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/v2/NativeModelBuilder.kt"
            line="66"
            column="21"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="        Instant before = TaskProfilingRecord.Companion.getClock().instant();"
        errorLine2="                                                       ~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/Blocks.java"
            line="50"
            column="56"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="        Instant after = TaskProfilingRecord.Companion.getClock().instant();"
        errorLine2="                                                      ~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/Blocks.java"
            line="52"
            column="55"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="            ).withName(FeatureSetMetadata.OUTPUT_FILE_NAME).on(InternalArtifactType.FEATURE_SET_METADATA)"
        errorLine2="                                          ~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/featuresplit/FeatureSetMetadataWriterTask.kt"
            line="131"
            column="43"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="                            parameters.packageId.isPresent &amp;&amp; parameters.packageId.get() &lt; FeatureSetMetadata.BASE_ID"
        errorLine2="                                                                                                              ~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/LinkApplicationAndroidResourcesTask.kt"
            line="897"
            column="111"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="        startTime = TaskProfilingRecord.clock.instant()"
        errorLine2="                                        ~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/profile/WorkerProfilingRecord.kt"
            line="56"
            column="41"/>
    </issue>

    <issue
        id="VisibleForTests"
        message="This method should only be accessed from tests or within private scope"
        errorLine1="        endTime = TaskProfilingRecord.clock.instant()"
        errorLine2="                                      ~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/profile/WorkerProfilingRecord.kt"
            line="63"
            column="39"/>
    </issue>

    <issue
        id="DiscouragedApi"
        message="Use of `scheduleAtFixedRate` is strongly discouraged because it can lead to unexpected behavior when Android processes become cached (tasks may unexpectedly execute hundreds or thousands of times in quick succession when a process changes from cached to uncached); prefer using `scheduleWithFixedDelay`"
        errorLine1="        maintainAction = maintainExecutor!!."
        errorLine2="                         ^">
        <location
            file="src/main/java/com/android/build/gradle/internal/services/Aapt2DaemonBuildService.kt"
            line="242"
            column="26"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="            if (request.inputFile == request.originalInputFile) {"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/res/Aapt2ErrorUtils.kt"
            line="73"
            column="17"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(artifact, that.artifact)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/level2/AndroidLibraryImpl.java"
            line="217"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(folder, that.folder)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/level2/AndroidLibraryImpl.java"
            line="218"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(classesFolder, that.classesFolder)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/BaseArtifactImpl.java"
            line="174"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(javaResourcesFolder, that.javaResourcesFolder)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/BaseArtifactImpl.java"
            line="176"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(mMultiDexKeepFile, that.mMultiDexKeepFile)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/BaseConfigImpl.java"
            line="181"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(mMultiDexKeepProguard, that.mMultiDexKeepProguard)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/BaseConfigImpl.java"
            line="182"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(buildFolder, that.buildFolder)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/DefaultAndroidProject.java"
            line="431"
            column="20"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                Objects.equals(infoFile, that.infoFile);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/InstantRunImpl.java"
            line="68"
            column="17"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="        return Objects.equals(jarFile, that.jarFile) &amp;&amp;"
        errorLine2="               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/JavaLibraryImpl.java"
            line="79"
            column="16"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                Objects.equals(artifactFile, that.artifactFile);"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/level2/JavaLibraryImpl.java"
            line="202"
            column="17"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="        check(result.librariesMap[inputFile] == outputFile)"
        errorLine2="              ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/dependency/JetifyTransform.kt"
            line="178"
            column="15"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                Objects.equals(storeFile, that.storeFile) &amp;&amp;"
        errorLine2="                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/SigningConfigImpl.java"
            line="151"
            column="17"/>
    </issue>

    <issue
        id="FileComparisons"
        message="Do not compare java.io.File with `equals` or `==`: will not work correctly on case insensitive file systems! See `go/files-howto`."
        errorLine1="                &amp;&amp; Objects.equals(manifestFile, that.manifestFile)"
        errorLine2="                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/ide/SourceProviderImpl.java"
            line="211"
            column="20"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`."
        errorLine1="                    .setExecutorService(MoreExecutors.listeningDecorator(ForkJoinPool.commonPool()))"
        errorLine2="                                                                                      ~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/AsarToApksTransform.kt"
            line="80"
            column="87"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`."
        errorLine1="                .setExecutorService(MoreExecutors.listeningDecorator(ForkJoinPool.commonPool()))"
        errorLine2="                                                                                  ~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleToApkTask.kt"
            line="121"
            column="83"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`."
        errorLine1="                .setExecutorService(MoreExecutors.listeningDecorator(ForkJoinPool.commonPool()))"
        errorLine2="                                                                                  ~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/BundleToStandaloneApkTask.kt"
            line="126"
            column="83"/>
    </issue>

    <issue
        id="CommonForkJoinPool"
        message="Avoid using common ForkJoinPool, directly or indirectly (for example via CompletableFuture). It has a limited set of threads on some machines which leads to hangs. See `go/do-not-freeze`."
        errorLine1="    private val defaultExecutorService: ExecutorService = ForkJoinPool.commonPool()"
        errorLine2="                                                                       ~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/Workers.kt"
            line="42"
            column="72"/>
    </issue>

    <issue
        id="NewForkJoinPool"
        message="Avoid using new ForkJoinPool instances when possible. Prefer using the IntelliJ application pool via `com.intellij.openapi.application.Application#executeOnPooledThread`, or for the Android Gradle Plugin use `com.android.build.gradle.internal.tasks.Workers`. See `go/do-not-freeze`."
        errorLine1="    val aapt2ThreadPool: ForkJoinPool = ForkJoinPool(parameters.aapt2ThreadPoolSize.get())"
        errorLine2="                                        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/services/Aapt2ThreadPoolBuildService.kt"
            line="35"
            column="41"/>
    </issue>

    <issue
        id="NewForkJoinPool"
        message="Avoid using new ForkJoinPool instances when possible. Prefer using the IntelliJ application pool via `com.intellij.openapi.application.Application#executeOnPooledThread`, or for the Android Gradle Plugin use `com.android.build.gradle.internal.tasks.Workers`. See `go/do-not-freeze`."
        errorLine1="            ForkJoinPool()"
        errorLine2="            ~~~~~~~~~~~~~~">
        <location
            file="src/main/java/com/android/build/gradle/internal/tasks/DexMergingTask.kt"
            line="840"
            column="13"/>
    </issue>

</issues>
