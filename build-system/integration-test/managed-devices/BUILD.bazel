load("//tools/base/bazel:maven.bzl", "maven_repository")
load("//tools/base/bazel:kotlin.bzl", "kotlin_library", "kotlin_test")
load("//tools/base/build-system/integration-test/connected:connected-test.bzl", "gradle_connected_test")

kotlin_library(
    name = "managed-devices",
    srcs = glob([
        "src/main/java/**/*.kt",
        "src/main/java/**/*.java",
    ]),
    deps = [
        "//tools/base/build-system/gradle-core",
        "//tools/base/build-system/integration-test/framework",
        "//tools/base/repository:tools.repository",
        "//tools/base/testutils:tools.testutils",
    ],
)

downloaded_sdk = [
    "@emulator_zip//file",
    "@system_image_android-29_default_x86_64//:x86_64-android-29-images",
]

sdk_jvm_flags = [
    "-Dsdk.repo.emulator.zip=$(location @emulator_zip//file)",
    "-Dsdk.repo.sysimage.android29.files=\"$(locations @system_image_android-29_default_x86_64//:x86_64-android-29-images)\"",
]

#keep sorted
TEST_DEPS = [
    ":managed-devices",
]

#keep sorted
TEST_DATA = downloaded_sdk + [
    "//prebuilts/studio/sdk:build-tools/latest",
    "//prebuilts/studio/sdk:platform-tools",
    "//tools/base/build-system:gradle-distrib",
    "//tools/base/build-system/aapt2:aapt2_for_tests",
    "//tools/base/build-system/integration-test:android_platform_for_tests",
]

#keep sorted
MAVEN_REPO_ZIPS = [
    "//tools/base/build-system:android_gradle_plugin",
]

#keep sorted
TEST_MAVEN_REPOS = [
    "//tools/base/build-system:android_gradle_plugin_runtime_dependencies",
    "//tools/base/build-system/integration-test:androidx_latest",
    "//tools/base/build-system/integration-test:kotlin_gradle_plugin_prebuilts",
    "//tools/base/build-system/integration-test:support_library_latest",
    "//tools/base/build-system/integration-test:utp_plugins",
    "//tools/base/build-system/integration-test/managed-devices:prebuilts",
]

gradle_connected_test(
    name = "FirebaseTestLabDeviceTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    maven_repo_zips = MAVEN_REPO_ZIPS + [
        "//tools/base/firebase/testlab/testlab-gradle-plugin:maven_dependencies",
        "//tools/base/firebase/testlab/testlab-gradle-plugin:testlab-gradle-plugin",
    ],
    maven_repos = TEST_MAVEN_REPOS,
    deps = TEST_DEPS,
)

gradle_connected_test(
    name = "FirebaseTestLabIntegrationTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    maven_repo_zips = MAVEN_REPO_ZIPS + [
        "//tools/base/firebase/testlab/testlab-gradle-plugin:maven_dependencies",
        "//tools/base/firebase/testlab/testlab-gradle-plugin:testlab-gradle-plugin",
    ],
    maven_repos = TEST_MAVEN_REPOS,
    resources = [":integration-test-resources"],
    deps = TEST_DEPS,
)

gradle_connected_test(
    name = "ManagedDeviceExtensionTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    maven_repo_zips = MAVEN_REPO_ZIPS,
    maven_repos = TEST_MAVEN_REPOS,
    deps = TEST_DEPS,
)

gradle_connected_test(
    name = "UtpManagedDeviceTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    jvm_flags = sdk_jvm_flags,
    maven_repo_zips = MAVEN_REPO_ZIPS,
    maven_repos = TEST_MAVEN_REPOS,
    shard_count = 2,
    deps = TEST_DEPS + [
        "//tools/base/build-system/integration-test/utp",
    ],
)

gradle_connected_test(
    name = "UtpManagedDeviceSetupTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    jvm_flags = sdk_jvm_flags,
    maven_repo_zips = MAVEN_REPO_ZIPS,
    maven_repos = TEST_MAVEN_REPOS,
    deps = TEST_DEPS + [
        "//tools/base/build-system/integration-test/utp",
    ],
)

gradle_connected_test(
    name = "SimpleManagedDeviceTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    jvm_flags = sdk_jvm_flags,
    maven_repo_zips = MAVEN_REPO_ZIPS,
    maven_repos = TEST_MAVEN_REPOS,
    deps = TEST_DEPS,
)

gradle_connected_test(
    name = "TestApplicationManagedDeviceTest",
    srcs = "src/test/java/com/android/build/gradle/integration/manageddevice/application/",
    avd = None,
    data = TEST_DATA + ["//tools/base/build-system/integration-test:test-projects/utp"],
    jvm_flags = sdk_jvm_flags,
    maven_repo_zips = MAVEN_REPO_ZIPS,
    maven_repos = TEST_MAVEN_REPOS,
    deps = TEST_DEPS,
)

filegroup(
    name = "all_test_files",
    srcs = glob(
        [
            "src/test/java/**/*.java",
            "src/test/java/**/*.kt",
            "BUILD.bazel",
        ],
    ),
    visibility = ["//visibility:private"],
)

kotlin_test(
    name = "BazelTargetTest",
    srcs = ["src/test/java/com/android/build/gradle/integration/manageddevice/application/BazelTargetTest.kt"],
    data = [":all_test_files"],
    test_class = "com.android.build.gradle.integration.manageddevice.application.BazelTargetTest",
    deps = [
        "//tools/base/build-system/integration-test/framework",
        "//tools/base/testutils:tools.testutils",
        "@maven//:junit.junit",
    ],
)

# Maven repo with all the dependencies required by test projects.
#
# Quick way of updating this list:
# - Run the new test with bazel
# - Copy the output log to $PWD/test.log
# - Run this command:
# grep -F '> Could not find' test.log \
#   | sed -e "s# *> Could not find \(.*\)\.#\1#"
#   | sed -e 's#\(.*\):\(.*\):\(.*\)#"@maven_tests//:\1.\2_\3",#'
#   | sort | uniq
maven_repository(
    name = "prebuilts",
    # keep sorted
    artifacts = [
        "@maven//:androidx.activity.activity-compose_1.5.1",
        "@maven//:androidx.appcompat.appcompat_1.1.0",
        "@maven//:androidx.appcompat.appcompat_1.2.0",
        "@maven//:androidx.appcompat.appcompat_1.3.0-beta01",
        "@maven//:androidx.compose.compiler.compiler_1.3.2",
        "@maven//:androidx.compose.material.material_1.3.0",
        "@maven//:androidx.compose.ui.ui-tooling_1.3.0",
        "@maven//:androidx.core.core-ktx_1.1.0",
        "@maven//:androidx.lifecycle.lifecycle-livedata-ktx_2.2.0",
        "@maven//:androidx.lifecycle.lifecycle-viewmodel-ktx_2.2.0",
        "@maven//:androidx.test.core_1.4.0-alpha06",
        "@maven//:androidx.test.espresso.espresso-core_3.2.0",
        "@maven//:androidx.test.ext.junit_1.1.2",
        "@maven//:androidx.test.ext.junit_1.1.3-alpha02",
        "@maven//:androidx.test.orchestrator_1.4.0-alpha06",
        "@maven//:androidx.test.rules_1.1.0",
        "@maven//:androidx.test.rules_1.4.0-alpha06",
        "@maven//:androidx.test.runner_1.4.0-alpha06",
        "@maven//:androidx.test.services.test-services_1.4.2",
        "@maven//:com.android.support.multidex-instrumentation_1.0.2",
        "@maven//:com.android.support.multidex_1.0.2",
        "@maven//:com.android.tools.desugar_jdk_libs_1.1.5",
        "@maven//:com.google.android.gms.play-services-base_15.0.1",
        "@maven//:com.google.code.findbugs.jsr305_1.3.9",
        "@maven//:com.google.guava.guava_19.0",
        "@maven//:org.hamcrest.hamcrest-library_1.3",
        "@maven//:org.jetbrains.kotlinx.kotlinx-coroutines-android_1.4.1",
        "@maven//:org.jetbrains.kotlinx.kotlinx-coroutines-core-common_1.3.6",
        "@maven//:org.tensorflow.tensorflow-lite-metadata_0.1.0",
        "@maven//:org.tensorflow.tensorflow-lite-support_0.1.0",
    ],
    visibility = ["__subpackages__"],
)

filegroup(
    name = "integration-test-resources",
    srcs = glob([
        "src/test/resources/**",
    ]),
    visibility = ["//visibility:private"],
)
