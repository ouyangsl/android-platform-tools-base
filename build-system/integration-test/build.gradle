apply plugin: 'groovy'

repositories {
    maven { url = uri(rootProject.cloneArtifacts.repository) }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile project(':base:gradle')
    compile "com.google.truth:truth:0.24"
}

// We put the integration tests in src/test because that's the most sensible name, but we don't want
// the test tasks from the groovy plugin to run.
test.enabled = false;

task integrationTest(type: Test) {
    environment("PROJECT_BUILD_DIR", project.buildDir)

    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
    description =
            "Runs the project integration tests. This requires an SDK either from the Android " +
                    "source tree, under out/..., or an env var ANDROID_HOME."
    group = "verification"
    systemProperties['jar.path'] = jar.archivePath
    environment("CUSTOM_REPO", rootProject.file("../out/repo"))

    forkEvery = 1
    maxParallelForks = Runtime.runtime.availableProcessors() / 2

    useJUnit {
        excludeCategories "com.android.build.gradle.integration.common.category.DeviceTests"
    }
}

task connectedIntegrationTest(type: Test) {
    environment("PROJECT_BUILD_DIR", project.buildDir)

    testClassesDir = sourceSets.test.output.classesDir
    classpath = sourceSets.test.runtimeClasspath
    description =
            "Runs the project integration tests with device tests. This requires an SDK either " +
                    "from the Android source tree, under out/..., or an env var ANDROID_HOME " +
                    "and a device."
    group = "verification"
    systemProperties['jar.path'] = jar.archivePath
    environment("CUSTOM_REPO", rootProject.file("../out/repo"))
}

integrationTest.dependsOn ':publishLocal'
connectedIntegrationTest.dependsOn ':publishLocal'
check.dependsOn integrationTest
