{
  "comments": [
    {
      "key": {
        "uuid": "0bcf7c48_cc702f72",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/binary/BinaryObject.java",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-02-13T18:33:24Z",
      "side": 1,
      "message": "also static and final are not needed in interfaces",
      "range": {
        "startLine": 23,
        "startChar": 2,
        "endLine": 23,
        "endChar": 14
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc2801e_cdcca971",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/binary/Decoder.java",
        "patchSetId": 3
      },
      "lineNbr": 63,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-02-13T18:22:27Z",
      "side": 1,
      "message": "return int8()?",
      "range": {
        "startLine": 63,
        "startChar": 11,
        "endLine": 63,
        "endChar": 22
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc2801e_2d31ade4",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/binary/Decoder.java",
        "patchSetId": 3
      },
      "lineNbr": 74,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-02-13T18:22:27Z",
      "side": 1,
      "message": "Oh, sorry I didn\u0027t explicitly mentioned these but, even only for consistency, u16 and u32 should also be changed, so this should return short...",
      "range": {
        "startLine": 74,
        "startChar": 13,
        "endLine": 74,
        "endChar": 19
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bdb6c05_70aa301c",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/binary/Decoder.java",
        "patchSetId": 3
      },
      "lineNbr": 88,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-02-13T18:22:27Z",
      "side": 1,
      "message": "... and this int. (In java 8, uint32 are, kind of, natively supported and their type is still \"int\" (they have native comparison functions for them",
      "range": {
        "startLine": 88,
        "startChar": 14,
        "endLine": 88,
        "endChar": 20
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ebcb083b_4bb505fb",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/rpccore/Broadcaster.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-02-13T18:33:24Z",
      "side": 1,
      "message": "This looks a bit weird :)\nIs this needed so ObjectFactory can register RpcErrorID ?\n\ncalling anything on ObjectFactory would trigger this, so we could make it more explicit?\n\nObjectFactory.initialize();",
      "range": {
        "startLine": 83,
        "startChar": 12,
        "endLine": 83,
        "endChar": 19
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cbbac49b_ca048340",
        "filename": "rpclib/src/main/java/com/android/tools/rpclib/rpccore/Broadcaster.java",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1060558
      },
      "writtenOn": "2015-02-13T19:16:24Z",
      "side": 1,
      "message": "Yes, that\u0027s an admittedly convoluted way to trigger the static initialization block without actually using the class, which isn\u0027t otherwise referenced anywhere. That\u0027s a common idiom in Go but it doesn\u0027t necessarily translate well to Java. I\u0027ll make it explicit as you\u0027ve suggested :)",
      "parentUuid": "ebcb083b_4bb505fb",
      "range": {
        "startLine": 83,
        "startChar": 12,
        "endLine": 83,
        "endChar": 19
      },
      "revId": "94b7aff1fe4936575703aee10fb8362ee974b2a4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}