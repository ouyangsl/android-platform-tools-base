{
  "comments": [
    {
      "key": {
        "uuid": "045e7dcf_f553e224",
        "filename": "sdklib/src/main/java/com/android/sdklib/repository/descriptors/PkgDesc.java",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 1001100
      },
      "writtenOn": "2014-07-01T13:17:28Z",
      "side": 1,
      "message": "Note that on Windows you\u0027ll run into issues if there\u0027s already an \"android-l\" (lower case) folder, it would conflict with \"android-L\".\nIt would be interesting to know what this is fixing -- without details on the real issue, my guess is something later tries to access the file system in case-sensitive way, which isn\u0027t ideal.",
      "revId": "b2f7db22f3dd7fdb36860e8fbd5d243727eb7208",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4464f599_1c234511",
        "filename": "sdklib/src/main/java/com/android/sdklib/repository/descriptors/PkgDesc.java",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2014-07-01T14:21:39Z",
      "side": 1,
      "message": "Hi Raphael, \nHere\u0027s the scenario: Your build.gradle contains \"compileSdkVersion \u0027android-L\u0027\" but you don\u0027t have the L Preview SDK installed. For example, somebody might have sent you a project which tests the new L features, but you haven\u0027t updated your own SDK yet.\n\nWhen you Gradle sync, the build fails stating that it cannot find platform android-L. \n\nWe have a quickfix now which offers to automatically install missing platforms (and build tools and local Maven repositories) on a build failure, so you just click the \"Install Android L\" link in the build output, and it runs through a little mini-license-acceptance dialog and then installs the missing package.\n\nThis feature was developed to work for all the non-preview platforms (18, 19, ...) but when we tested it with L, it didn\u0027t work, and Alex traced it down to the code below.",
      "parentUuid": "045e7dcf_f553e224",
      "revId": "b2f7db22f3dd7fdb36860e8fbd5d243727eb7208",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "646f3977_7d827f7a",
        "filename": "sdklib/src/main/java/com/android/sdklib/repository/descriptors/PkgDesc.java",
        "patchSetId": 3
      },
      "lineNbr": 1146,
      "author": {
        "id": 1001100
      },
      "writtenOn": "2014-07-01T14:30:09Z",
      "side": 1,
      "message": "The fix here is less than ideal because it means you\u0027re creating a case-sensitive folder name when installing a package. I\u0027d very much like to avoid that since it means we\u0027d have different behavior on different platforms (e.g. win vs mac/linux.) The point of the sanitize method here is to make the name uniform and remove characters that might not be safe for the file system.\n\nInstead from what you said I\u0027d guess the code that looks for the platform is not properly dealing with the L being on android-l -- what code does that? If it\u0027s using the LocalSdk platform scanner then I\u0027d rather fix that part. If code doing the check is not using the LocalSdk scanner, than it should so that we don\u0027t end up reimplementing the sdk scan logic in multiple places (not to mention that we all wanted to have a single LocalSdk singleton to avoid parsing folders multiple times, and we have just that now, so we should be using it.)\n\nRemember that the platform folder name is NOT fixed. It can be anything so that $SDK/platforms/whatever/ is a perfectly valid install path for android-L as long as it contains a source.properties with the right info. Historically we used to name the platform folder name using the \"marketing\" name of the platform (e.g. \"android-2.2\" instead of \"android-10\") which is why it can be anything and doesn\u0027t matter -- it only matters that it be under SDK/platforms/ and the source.props indicates what it is.",
      "parentUuid": "4464f599_1c234511",
      "revId": "b2f7db22f3dd7fdb36860e8fbd5d243727eb7208",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}