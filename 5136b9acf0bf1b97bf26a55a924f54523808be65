{
  "comments": [
    {
      "key": {
        "uuid": "2a9c1583_211b8e7e",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 515,
      "author": {
        "id": 1010055
      },
      "writtenOn": "2013-06-21T17:22:48Z",
      "side": 1,
      "message": "There is no return value here, so maybe rephrase as \"Updates the fileValidity parameter\". Also consider changing the method name?",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_1c3c7596",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 515,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2013-06-21T20:15:43Z",
      "side": 1,
      "message": "yeah I can update that.",
      "parentUuid": "2a9c1583_211b8e7e",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a9c1583_e13fe6c0",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 524,
      "author": {
        "id": 1010055
      },
      "writtenOn": "2013-06-21T17:22:48Z",
      "side": 1,
      "message": "incomplete?",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a9c1583_a160bee1",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 546,
      "author": {
        "id": 1010055
      },
      "writtenOn": "2013-06-21T17:22:48Z",
      "side": 1,
      "message": "BTW, I was looking at what checkFileForAndroidRes does, and I saw this line:\n\nAssetSet.java#isValidSourceFile:\n\n!parent.equals(sourceFolder)\n\nThere is a warning there that says \"Please don\u0027t use equals as it doesn\u0027t honor case sensitivity on Mac\".",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_3c3f318f",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 546,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2013-06-21T20:15:43Z",
      "side": 1,
      "message": "I don\u0027t see that warning.\n\nAll those file comparison are coming from files that are read through the File API so I would guess (hope?) that they will always the return the same  upper/lower case combination.\n\nIs there a utility method somewhere to do better comparison?",
      "parentUuid": "2a9c1583_a160bee1",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_3ce3b1f4",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 546,
      "author": {
        "id": 1010055
      },
      "writtenOn": "2013-06-21T20:44:01Z",
      "side": 1,
      "message": "It is an IntelliJ inspection that suggests the use of FileUtil.filesEquals. You are probably not seeing it since you don\u0027t have IntelliJ (for plugin development) open.\n\nTheir replacement seems to just do:\n\n    path1 \u003d toCanonicalPath(path1);\n    path2 \u003d toCanonicalPath(path2);\n    return PATH_HASHING_STRATEGY.equals(path1, path2);\n\nI haven\u0027t checked whether this is actually any better.",
      "parentUuid": "8ab421fd_3c3f318f",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_fc7d492b",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 546,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2013-06-21T20:59:35Z",
      "side": 1,
      "message": "Yeah reading the doc, getCanonincalPath will return a unique file per file (not per path).\n\nHowever I don\u0027t want to use canonicalpath.\n\nJava7 has a new class to handle this crap....",
      "parentUuid": "8ab421fd_3ce3b1f4",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_3cce1158",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/DataMerger.java",
        "patchSetId": 3
      },
      "lineNbr": 546,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2013-06-21T21:19:18Z",
      "side": 1,
      "message": "(Note: the toCanonicalPath referred to above isn\u0027t the horrible File#getCanonicalPath which resolves symlinks and changes to absolute paths etc, it\u0027s a local utility method in FileUtil which does some simple string cleanups to make sure we don\u0027t have one path ending with / and the other not etc, such that they can be properly compared), then they do simple string case insensitive comparisons.\n\nHowever, for our usage it\u0027s probably overkill. I suspect equals will work fine for our case, since we only deal with files whose names we originally get from parent#listFiles().  \n\nThe problem is that OSX has a case insensitive file system, but one which remembers case. Thus, if  new File(\"/tmp/Abc\").exists() is true, then new File(\"/tmp/ABC\").exists() is also true even if new File(\"/tmp/Abc\").equals(new File(\"/tmp/ABC\") is false since they just do (case sensitive) path string compares.",
      "parentUuid": "8ab421fd_fc7d492b",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_3c0851e2",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/ResourceSet.java",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 1004689
      },
      "writtenOn": "2013-06-21T20:33:56Z",
      "side": 1,
      "message": "Hmmm.... does that mean that if the user has a different file in this directory than one of the expected types, it will throw an exception? That happened to some people this week (the below code threw an NPE when folderType above as null); one user had an .mp3 file here.\n\nThat seems a bit severe -- shouldn\u0027t we just emit a warning instead? It\u0027s particularly bad for the resource set when used as part of project resources where this exception will disable all further processing so the resource repository won\u0027t be initialized. (That won\u0027t matter when we switch to a PSI based repository: https://android-review.googlesource.com/#/c/60364/",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ab421fd_bca581ab",
        "filename": "sdk-common/src/main/java/com/android/ide/common/res2/ResourceSet.java",
        "patchSetId": 3
      },
      "lineNbr": 294,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2013-06-21T20:48:53Z",
      "side": 1,
      "message": "yeah actually I should remove, this, I had put that a file ago to provide a better error, but the fix in DataMerger will actually ignore those file.\n\nNote that it\u0027s not about the file extension, it\u0027s about the folder name. I\u0027ll remove this.",
      "parentUuid": "8ab421fd_3c0851e2",
      "revId": "5136b9acf0bf1b97bf26a55a924f54523808be65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}