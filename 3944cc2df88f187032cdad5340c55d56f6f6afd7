{
  "comments": [
    {
      "key": {
        "uuid": "ed2329ea_c74f7e90",
        "filename": "perflib/src/main/java/com/android/tools/perflib/heap/Type.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1047453
      },
      "writtenOn": "2015-05-12T23:51:07Z",
      "side": 1,
      "message": "This was already a hack, I guess this will all look cleaner if instead of passing the Snapshot on getSize, we passed the snapshot on getType(int id, snapshot). Then the type could just know the right size? and getSize remains getSize?",
      "range": {
        "startLine": 56,
        "startChar": 15,
        "endLine": 56,
        "endChar": 60
      },
      "revId": "3944cc2df88f187032cdad5340c55d56f6f6afd7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed2329ea_27ebfaa9",
        "filename": "perflib/src/main/java/com/android/tools/perflib/heap/Type.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1047759
      },
      "writtenOn": "2015-05-13T00:15:35Z",
      "side": 1,
      "message": "Oh, clearly my refactor didn\u0027t go deep enough. I\u0027ll fix this. :)",
      "parentUuid": "ed2329ea_c74f7e90",
      "range": {
        "startLine": 56,
        "startChar": 15,
        "endLine": 56,
        "endChar": 60
      },
      "revId": "3944cc2df88f187032cdad5340c55d56f6f6afd7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed2329ea_474eee4a",
        "filename": "perflib/src/main/java/com/android/tools/perflib/heap/Type.java",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1047759
      },
      "writtenOn": "2015-05-13T00:34:15Z",
      "side": 1,
      "message": "Looked at this and it looks like it\u0027ll be messy. As in, getType returns a static enum instance \"OBJECT\". If we stuff the size into getType, then all other existing hprof will also get affected (since it\u0027s an enum, it\u0027s static).\n\nOne option is to leave it as-is.\n\nAnother option is to refactor as follows:\n1) Add 3 more enums to Type.java. Since OBJECT takes up slot ID 2, we can use slot IDs 0, 1, 3 to denote 1, 2, and 8 byte long pointers. Luckily the present hprof format doesn\u0027t use IDs 0, 1, and 3 (given the odd spacings, it may even be related to this). I don\u0027t think we\u0027ll be moving to 128-bit pointers anytime soon.\n2) Add isObject() function to Type, which returns true iff mId is one of {0, 1, 2, 3}. Replace everywhere that checks against OBJECT.\n3) Patch up everywhere else as suggested, and in getType, return the appropriate enum based on given Snapshot.",
      "parentUuid": "ed2329ea_27ebfaa9",
      "range": {
        "startLine": 56,
        "startChar": 15,
        "endLine": 56,
        "endChar": 60
      },
      "revId": "3944cc2df88f187032cdad5340c55d56f6f6afd7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}