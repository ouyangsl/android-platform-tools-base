{
  "comments": [
    {
      "key": {
        "uuid": "3e570543_25fbd560",
        "filename": "lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/CheckPermissionDetector.java",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2013-11-11T16:51:51Z",
      "side": 1,
      "message": "What\u0027s so special about Context.checkPermission vs, say, Context.checkCallingOrSelfPermission?",
      "revId": "0c5c6141ecd6b1128843120ad507db9618d7e960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de65092b_20ca9fdd",
        "filename": "lint/libs/lint-checks/src/main/java/com/android/tools/lint/checks/CheckPermissionDetector.java",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2013-11-11T16:51:51Z",
      "side": 1,
      "message": "I\u0027m not entirely sure how this method works, but I think it might be wrong. What it should be doing is checking whether the method being invoked is Context.check* (or its override), but it doesn\u0027t appear to be doing that. For example, I think the following code inside a Service won\u0027t be flagged:\n\npublic int onStartCommand(Intent intent, int flags, int startId) {\n    checkPermission(\"android.permission.INTERNET\");\n    ...\n}\n\nMy suspicion is based on the fact that, if you correctly check for Context.check* methods, you won\u0027t need to have a special case for ContextWrapper -- it doesn\u0027t add any new check* methods.",
      "revId": "0c5c6141ecd6b1128843120ad507db9618d7e960",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}