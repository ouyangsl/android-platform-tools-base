{
  "comments": [
    {
      "key": {
        "uuid": "f0268cf7_d154534e",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1019910
      },
      "writtenOn": "2014-10-06T04:54:13Z",
      "side": 1,
      "message": "Nit: this fields are automatically initialized with null. Any reason for explicitly doing that? I\u0027ve seen other classes in this CL not doing it.",
      "range": {
        "startLine": 42,
        "startChar": 40,
        "endLine": 42,
        "endChar": 44
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3014a487_ea3b63bd",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2014-10-06T17:00:00Z",
      "side": 1,
      "message": "yeah I don\u0027t know why it\u0027s like that.",
      "parentUuid": "f0268cf7_d154534e",
      "range": {
        "startLine": 42,
        "startChar": 40,
        "endLine": 42,
        "endChar": 44
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3014a487_649deaca",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 181,
      "author": {
        "id": 1019910
      },
      "writtenOn": "2014-10-06T04:54:13Z",
      "side": 1,
      "message": "remove?",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 93
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0268cf7_671de5d1",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 181,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2014-10-06T17:00:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3014a487_649deaca",
      "range": {
        "startLine": 181,
        "startChar": 8,
        "endLine": 181,
        "endChar": 93
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5017588b_25f76e3a",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 419,
      "author": {
        "id": 1019910
      },
      "writtenOn": "2014-10-06T04:54:13Z",
      "side": 1,
      "message": "Minor suggestion: Guava\u0027s Objects.equals simplifies checking if two nullable objects are equal.",
      "range": {
        "startLine": 419,
        "startChar": 19,
        "endLine": 419,
        "endChar": 25
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0268cf7_71476798",
        "filename": "build-system/builder/src/main/java/com/android/builder/core/DefaultProductFlavor.java",
        "patchSetId": 6
      },
      "lineNbr": 503,
      "author": {
        "id": 1019910
      },
      "writtenOn": "2014-10-06T04:54:13Z",
      "side": 1,
      "message": "Minor suggestion: Guava\u0027s Objects.hashCode(Object[]) makes it easier to write hashCode method (e.g. no need to check for null.)",
      "range": {
        "startLine": 503,
        "startChar": 26,
        "endLine": 503,
        "endChar": 27
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0268cf7_4771c182",
        "filename": "build-system/gradle/src/main/groovy/com/android/build/gradle/internal/api/ImmutableBaseConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1041553
      },
      "writtenOn": "2014-10-06T16:33:52Z",
      "side": 1,
      "message": "I find the name including Immutable a little misleading. There is no provision on these classes on the actual implementation of interfaces like BaseConfig. For this class to really be immutable, it would require an immutable BaseConfig to be used in the constructor. At the very least it should be threadsafe as users of an immutable object usually do not synchronize on accesses to it. This could lead to threading issues.\n\nMaybe all these classes should be renamed with a name pattern like ReadOnlyBaseConfig or ReadOnlyBaseConfigFacade that make no synchronization promises. I suppose another would be to synchronize all methods of the class.",
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5017588b_8b3e31af",
        "filename": "build-system/gradle/src/main/groovy/com/android/build/gradle/internal/api/ImmutableBaseConfig.java",
        "patchSetId": 6
      },
      "lineNbr": 42,
      "author": {
        "id": 1001414
      },
      "writtenOn": "2014-10-06T17:00:00Z",
      "side": 1,
      "message": "Yes, I agree. It was called ReadOnly... in a previous patch and renamed it later,but I\u0027ve been thinking the same thing since.",
      "parentUuid": "f0268cf7_4771c182",
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5017588b_c5113ac2",
        "filename": "build-system/gradle/src/main/groovy/com/android/build/gradle/internal/api/ImmutableFlavorList.java",
        "patchSetId": 6
      },
      "lineNbr": 119,
      "author": {
        "id": 1019910
      },
      "writtenOn": "2014-10-06T04:54:13Z",
      "side": 1,
      "message": "Suggestion: add @Deprecated.\nSomething I like about Guava\u0027s ImmutableList (which extends java.util.List) is that all the methods that change state are also deprecated. IMHO, that is a nice detail, because the IDE will flag such methods, in addition to the exception thrown at run-time.",
      "range": {
        "startLine": 119,
        "startChar": 19,
        "endLine": 119,
        "endChar": 22
      },
      "revId": "4eb7929307c1841fbee818a07cea4acf67f7de49",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}